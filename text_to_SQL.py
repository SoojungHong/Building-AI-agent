import openai

# Configure your Azure OpenAI settings
openai.api_type = "azure"
openai.api_key = "YOUR_AZURE_OPENAI_API_KEY"
openai.api_base = "https://YOUR_AZURE_OPENAI_ENDPOINT.openai.azure.com/"
openai.api_version = "2023-06-01-preview"  # Use the correct API version for Azure OpenAI

def convert_text_to_sql(user_query):
    """
    Converts a user's natural language query into an SQL command using GPT-4.

    Args:
        user_query (str): The user's natural language query.

    Returns:
        str: The SQL command generated by GPT-4.
    """
    # Define the system prompt for GPT-4
    system_prompt = (
        "You are a helpful assistant specialized in converting natural language queries to SQL. "
        "Generate valid SQL commands based on the user's query. Include table names and columns, "
        "and ensure proper SQL syntax."
    )
    
    # Generate SQL using the GPT-4 model
    response = openai.ChatCompletion.create(
        engine="gpt-4",  # Replace this with your specific GPT-4 deployment name in Azure
        messages=[
            {"role": "system", "content": system_prompt},
            {"role": "user", "content": f"Convert this query to SQL: {user_query}"}
        ],
        temperature=0,  # For deterministic output
        max_tokens=200,  # Adjust based on expected SQL command length
        top_p=1.0,
        frequency_penalty=0,
        presence_penalty=0
    )
    
    # Extract the SQL command from the response
    sql_command = response['choices'][0]['message']['content']
    return sql_command

# Example usage
if __name__ == "__main__":
    user_query = "Show me the names and email addresses of customers who made purchases in the last 30 days."
    sql_command = convert_text_to_sql(user_query)
    print("Generated SQL Command:")
    print(sql_command)
